<h1> Related data </h1>

<h2> for <%= object_tag(@object) -%> (a <%= @object.class.name -%>)</h2>

<%= link_to 'back', metamorphosize_if(@object) -%>

<h3> Has many </h3>

<% @object.class.reflect_on_all_associations(:has_many).sort { |a, b| a.name <=> b.name }.each do |r| -%>
  <% next if r.name =~ /_hierarchies/ %>

  <% if @object.respond_to?(r.name) -%>
    <% t = @object.send(r.name.to_s).count %>
    <% if t > 0 %>
      <%= content_tag(:h4, r.name.to_s.humanize + ' (' + t.to_s + ')' ) -%> 
      <ul> 
        <% @object.send(r.name.to_s).all.each do |o| -%>
          <%= content_tag(:li, object_link(o)) -%>
        <% end %>
      </ul>
    <% end %>
  <% else %>
    <mark class="notice"> Requires method rename! </mark>
  <% end %>
<% end %>

<h3> Has one </h3>
<ul>
  <% @object.class.reflect_on_all_associations(:has_one).sort { |a, b| a.name <=> b.name }.each do |r| -%>
    <% if t = @object.send(r.name.to_s) -%>
      <%= content_tag(:li, (r.name.to_s.humanize  + ': ' +  object_link(t)).html_safe ) -%>
    <% end %>
  <% end %>
</ul>

<h3> Belongs to </h3>
<ul>
  <% @object.class.reflect_on_all_associations(:belongs_to).sort { |a, b| a.name <=> b.name }.each do |r| -%>
    <% if t = @object.send(r.name.to_s) -%>
      <%= content_tag(:li, (r.name.to_s.humanize  + ': ' +  object_link(t)).html_safe ) -%>
    <% end %>
  <% end %>
</ul>
